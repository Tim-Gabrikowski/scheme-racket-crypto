; enth (3.1.b)
(define (enth? o l)
  (cond ((null? l) #f)
        ((equal? o (first l)) #t)
        (else (enth? o (rest l)))
  )
)

; 3.2
(define (entf o l r)
  (cond ((null? l) r)
        ((equal? o (first l)) (entf o (rest l) r))
        (else (entf o (rest l) (append r (list (first l)))))
  )
)

(define (entfm o l r)
  (cond ((null? l) r)
        ((enth? (first l) o) (entfm o (rest l) r))
        (else (entfm o (rest l) (append r (list (first l)))))
  )
)