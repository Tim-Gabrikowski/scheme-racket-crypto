(define (% a b) (modulo a b))

(define (incrLint i n)
  (+ (% (+ (- i 97) n) 26) 97)
)
(define (incrUint i n)
   (+ (% (+ (- i 65) n) 26) 65)
)
(define (incrCint c n)
  (cond ((> c 96) (incrLint c n))
        ((and (> c 64) (< c 97)) (incrUint c n))
  )
)
(define (decrLint i n)
  (+ (% (- (- i 97) n) 26) 97)
)
(define (decrUint i n)
   (+ (% (- (- i 65) n) 26) 65)
)
(define (decrCint c n)
  (cond ((> c 96) (decrLint c n))
        ((and (> c 64) (< c 97)) (decrUint c n))
  )
)
(define (charIndex c)
  (cond ((> c 96) (- c 97))
        ((and (> c 64) (< c 97)) (- c 65))
  )
)

(define (addFunction la lb a)
  (cond ((null? la) a)
        ((null? lb) (addFunction la b b a))
        (else (addFunction (rest la) (rest (append lb (list (first lb)))) (append a (list (integer->char (incrCint (char->integer (first la)) (charIndex (char->integer (first lb)))))))))
  )
)
(define (subtrFunction la lb a)
  (cond ((null? la) a)
        ((null? lb) (addFunction la b b a))
        (else (subtrFunction (rest la) (rest (append lb (list (first lb)))) (append a (list (integer->char (decrCint (char->integer (first la)) (charIndex (char->integer (first lb)))))))))
  )
)

(define (vignereCrypt ct key)
  (list->string (addFunction (string->list ct) (string->list key) '()))
)
(define (vignereDecrypt cy key)
  (list->string (subtrFunction (string->list cy) (string->list key) '()))
)
